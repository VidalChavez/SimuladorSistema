#include<stdio.h>
#include<stdlib.h>

void assembler(char archivo[]);
char mayus(char min);
int valida(char linea[]);
int esLetra(char let);
int esHex(char val);
int opcode(char linea[]);
int main(void)
{
  char nombre[50];
  printf("inserta el nombre del archivo:\t");
  scanf("%s", nombre);

  assembler(nombre);
}

void assembler(char archivo[])
{
	
  int error = 0;
  FILE *fp;
  char linea[80];
  int primera = 0b00000000;
  int segunda = 0b00000000;
  int val = 0;
  int op;
  fp = fopen (archivo, "r"); 
  if(fp == NULL)
    {
      printf("No existe el archivo");
    }
  while(fgets(linea, 80, fp) != NULL)
    { 
      primera = 0b00000000;
      segunda = 0b00000000;
      error += 1;
      val = valida(linea);
      if(val == 0)
	{
	  printf("error en la linea: %d\n", error);
	}
      else if(linea[0] != '\n')
	{
	  if(val == 1)
	    {
	      primera += 0b11000000;
	    }
	  else if(val == 2)
	    {
	      primera += 0b10000000;
	    }
	  else if(val == 3)
	    {
	      primera += 0b01000000;
	    }
	  else if(val == 4)
	    {
	      primera += 0b00000000;
	    }
	  op = opcode(linea);
	  printf("primera = %X\n", primera);
	  //printf ("segunda = %X\n", segunda);
	    
	}
    }
  fclose(fp);

}

char mayus(char min)
{
  return (min - 32);
}

int valida(char linea[])
{
	
  int cont = 0;
  int dirMem = 0;// $
  int valIn = 0;// #
  int normal = 0;
  int coma = 0;
  while(linea[cont] != '\0')
    {
      if((linea[cont] == ','||linea[cont] == ' ') && cont < 79)
	{
	  if(linea[cont + 1] == '#')
	    valIn += 1;
	  else if(linea[cont + 1] == '$')
	    dirMem += 1;
	  else if(esLetra(linea[cont + 1]) == 0)
	    return 0;
	  else if(linea[cont +1] == ',')
	    coma += 1;
	  else
	    normal += 1;
	  if(valIn > 1 || dirMem > 1|| coma > 2 ||(valIn != 0 && dirMem != 0))
	    return 0;
	}
      cont += 1;
    }	
  /****************
   * 0- Inv.
   * 1- $
   * 2- #
   * 3- Normal
   * 4- Nada
   ****************/
  if(valIn == 1)
    return 2;
  else if(dirMem == 1)
    return 1;
  else if(normal != 0)
    return 3;
  else
    return 4;
	
}


int esHex(char val)
{
  int cont;
  char hex[16] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
	
  for(cont = 0; cont < 16; cont += 1)
    {
      if(hex[cont] == val)
	return 1;
    }
	
  return 0;
}

int esLetra(char let)
{
  char validos[28] = {' ','Q','W','E','R','T','Y','U','I','O','P','A','S','D','F','G','H','J','K','L','Z','X','C','V','B','N','M'};
  int contV = 0;

  while(contV < 28)
    {
      if(validos[contV] == let )
	return 1;
      contV += 1;
    }
  return 0;
}

int opcode(char linea[])
{

}

